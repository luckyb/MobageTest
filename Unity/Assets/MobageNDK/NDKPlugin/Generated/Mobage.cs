//
//  Mobage.cs
//  mobage-ndk
//
//  Copyright (c) 2012, DeNA Co., Ltd. All rights reserved
//

#if !(HAS_MOBAGE_DESKTOP_SHIM && UNITY_EDITOR)
// Mobage don't support Unity Editor right now. (add "-define:HAS_MOBAGE_DESKTOP_SHIM" to /Assets/smcs.rsp to override)


using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Mobage {

	/**
	 * <summary> Initialize the Mobage service, and reestablish user sessions when necessary.</summary>
	 * <remarks>
	 *
	 * </remarks>
	 */
	public partial class Mobage {}
	#region Enums / Bitfields
		/**
		 * Enumeration of Mobage server environments that an app can use.
		 */
		public enum ServerEnvironment {
			/**
					 *
		 * Production environment.
		 * Use this environment when you are ready to submit your app to Mobage for publication.
			 */
			Production = 0, 
			/**
					 *
		 * Sandbox environment.
		 * Use this environment for testing your app.
			 */
			Sandbox = 1, 
		};

	#endregion

/* Comment out for now until we can transfer over into single Enum class

#region Enums / Bitfields

	 * Enumeration of Mobage server environments that an app can use.

	public enum ServerEnvironment {

				 *
		 * Production environment.
		 * Use this environment when you are ready to submit your app to Mobage for publication.

		Production = 0, 

				 *
		 * Sandbox environment.
		 * Use this environment for testing your app.

		Sandbox = 1, 
	};
	
#endregion
*/
	
#region Notifications!
	public partial class Mobage {

		/**
		 * <summary> Notification that the Mobage SDK has shown or hidden a Mobage UI component, such as the user profile screen or Bank dialog.</summary>
		 * <remarks>
		 * Your app receives this notification at the following times:
		 * <ul>
		 * <li>Immediately before a Mobage UI component is displayed.</li>
		 * <li>Immediately after a Mobage UI component is completely removed from the screen.</li>
		 * </ul>
		 * Your app may receive this notification more than once within a short time. The most recent
		 * notification is the most accurate.
		 * <p>
		 * Your app will not receive this notification for UI components that are intended to be
		 * displayed as part of your app, such as the Balance Button.
		 * </remarks>
		 * 
		 */
		public partial class MobageUIVisibleNotification {
			// Properties!
			/**
			 * Set to <c>true</c> if a Mobage UI component is visible or <c>false</c> if the component was hidden.
			 */
			public bool visible;
		}

	}
#endregion // Notifications


#region Delegate Callbacks
	public partial class Mobage {
		/**
		 * <summary></summary>
		 * <remarks>
		 *
		 * </remarks>
		 * <param name="status" cref="F:Mobage.SimpleAPIStatus">Information about the result of the request.</param>
		 * <param name="error" cref="F:Mobage.Error">Information about the error, or <c>null</c> if there was no error.</param>
		 * <param name="mvid" cref="F:System.String">Mobage Vendor ID.</param>
		 */
		public delegate void getMobageVendorId_onCompleteCallback(SimpleAPIStatus status, Error error, String mvid);

		/**
		 * <summary></summary>
		 * <remarks>
		 *
		 * </remarks>
		 * <param name="status" cref="F:Mobage.SimpleAPIStatus">Information about the result of the request.</param>
		 * <param name="error" cref="F:Mobage.Error">Information about the error, or <c>null</c> if there was no error.</param>
		 * <param name="sdkVersion" cref="F:System.String">Mobage Unity SDK version.</param>
		 */
		public delegate void getSDKVersion_onCompleteCallback(SimpleAPIStatus status, Error error, String sdkVersion);


		
		public static event MobageUIVisibleNotificationDelegate MobageUIVisible {
			add {
				MobageUIVisibleNotificationDelegate_add(value);
			}
			remove {
				MobageUIVisibleNotificationDelegte_remove(value);
			}
		}
		public delegate void MobageUIVisibleNotificationDelegate(MobageUIVisibleNotification notification);
	}
#endregion

#region Static Methods
	public partial class Mobage {
		/**
		 * <summary> Initialize the Mobage service, and report a Mobage analytics event indicating that the app has started.</summary>
		 * <remarks>
		 * Call this method immediately after your app starts.
		 * <p>
		 * <strong>Important</strong>: Call this method only once.
		 * </remarks>
		 * <param name="serverEnvironment" cref="F:Mobage.ServerEnvironment">Indicates whether to connect to Mobage's sandbox or production environment. Contains an enumerated value of Mobage::ServerEnvironment. <strong>Important</strong>: Before you submit your app to Mobage for review, you must change this value to refer to Mobage's production environment.</param>
		 * <param name="appId" cref="F:System.String">The app ID, also known as the "app key." Generated by the <a href="https://developer.mobage.com/">Mobage Developer Portal</a>.</param>
		 * <param name="appVersion" cref="F:System.String">The app version.</param>
		 * <param name="consumerKey" cref="F:System.String">The app's OAuth key for accessing the Mobage service. Generated by the <a href="https://developer.mobage.com/">Mobage Developer Portal</a>.</param>
		 * <param name="consumerSecret" cref="F:System.String">The app's OAuth secret for accessing the Mobage service. Generated by the <a href="https://developer.mobage.com/">Mobage Developer Portal</a>.</param>
		 * 
		 */
		public static void initializeMobageWithStandardParameters(ServerEnvironment serverEnvironment, String appId, String appVersion, String consumerKey, String consumerSecret)
		{
			_initializeMobageWithStandardParameters(serverEnvironment, appId, appVersion, consumerKey, consumerSecret);
		}
		/**
		 * <summary> Retrieve the Mobage Vendor ID, which is a unique identifier for the device running your app.</summary>
		 * <remarks>
		 * The identifier is unique across devices for apps published on Mobage.
		 * </remarks>
		 * <param name="onComplete" cref="F:Mobage.GetMobageVendorIdOnCompleteCallback">
		 Callback for retrieving the Mobage Vendor ID.</param>
		 * 
		 */
		public static void getMobageVendorId(getMobageVendorId_onCompleteCallback onComplete)
		{
			_getMobageVendorId(onComplete);
		}
		public static void getSDKVersion(getSDKVersion_onCompleteCallback onComplete)
		{
			_getSDKVersion(onComplete);
		}
	}
#endregion


}


#endif // End compilation exception for UNITY_EDITOR && HAS_MOBAGE_DESKTOP_SHIM
